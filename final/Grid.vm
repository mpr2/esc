function Grid.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 160
pop static 0
push constant 32
pop static 1
push constant 64
pop static 2
push constant 0
pop this 1
push constant 9
call Array.new 1
pop this 0
push constant 0
pop this 2
label WHILE_EXP0
push this 2
push constant 9
lt
not
if-goto WHILE_END0
push this 2
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 1
add
pop this 2
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Grid.draw 0
push argument 0
pop pointer 0
push pointer 0
call Grid.drawGrid 1
pop temp 0
push pointer 0
call Grid.drawXO 1
pop temp 0
push pointer 0
call Grid.drawCursor 1
pop temp 0
push constant 0
return
function Grid.drawGrid 0
push argument 0
pop pointer 0
push static 0
push static 2
add
push static 1
push static 0
push static 2
add
push static 1
push constant 3
push static 2
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push static 0
push constant 2
push static 2
call Math.multiply 2
add
push static 1
push static 0
push constant 2
push static 2
call Math.multiply 2
add
push static 1
push constant 3
push static 2
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push static 0
push static 1
push static 2
add
push static 0
push constant 3
push static 2
call Math.multiply 2
add
push static 1
push static 2
add
call Screen.drawLine 4
pop temp 0
push static 0
push static 1
push constant 2
push static 2
call Math.multiply 2
add
push static 0
push constant 3
push static 2
call Math.multiply 2
add
push static 1
push constant 2
push static 2
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Grid.drawXO 0
push argument 0
pop pointer 0
push constant 0
pop this 2
label WHILE_EXP0
push this 2
push constant 9
lt
not
if-goto WHILE_END0
push this 2
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 2
call Grid.drawX 2
pop temp 0
label IF_FALSE0
push this 2
push this 0
add
pop pointer 1
push that 0
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 2
call Grid.drawO 2
pop temp 0
label IF_FALSE1
push this 2
push constant 1
add
pop this 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.drawX 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Grid.xFromIdx 2
pop local 0
push pointer 0
push argument 1
call Grid.yFromIdx 2
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push local 0
push static 2
add
push local 1
push static 2
add
call Screen.drawLine 4
pop temp 0
push local 0
push local 1
push static 2
add
push local 0
push static 2
add
push local 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Grid.drawO 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Grid.xFromIdx 2
pop local 0
push pointer 0
push argument 1
call Grid.yFromIdx 2
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push static 2
push constant 2
call Math.divide 2
add
push local 1
push static 2
push constant 2
call Math.divide 2
add
push static 2
push constant 2
call Math.divide 2
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Grid.drawCursor 3
push argument 0
pop pointer 0
push pointer 0
push this 1
call Grid.xFromIdx 2
pop local 0
push pointer 0
push this 1
call Grid.yFromIdx 2
pop local 1
push constant 5
pop local 2
push this 1
push this 0
add
pop pointer 1
push that 0
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
not
call Screen.setColor 1
pop temp 0
label IF_END0
push local 0
push static 2
push constant 2
call Math.divide 2
add
push local 1
push static 2
push constant 2
call Math.divide 2
add
push local 2
sub
push local 0
push static 2
push constant 2
call Math.divide 2
add
push local 1
push static 2
push constant 2
call Math.divide 2
add
push local 2
add
call Screen.drawLine 4
pop temp 0
push local 0
push static 2
push constant 2
call Math.divide 2
add
push local 2
sub
push local 1
push static 2
push constant 2
call Math.divide 2
add
push local 0
push static 2
push constant 2
call Math.divide 2
add
push local 2
add
push local 1
push static 2
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Grid.rest 0
push argument 0
pop pointer 0
push argument 1
push argument 1
push argument 2
call Math.divide 2
push argument 2
call Math.multiply 2
sub
return
function Grid.xFromIdx 0
push argument 0
pop pointer 0
push static 0
push pointer 0
push argument 1
push constant 3
call Grid.rest 3
push static 2
call Math.multiply 2
add
return
function Grid.yFromIdx 0
push argument 0
pop pointer 0
push static 1
push argument 1
push constant 3
call Math.divide 2
push static 2
call Math.multiply 2
add
return
function Grid.eraseCursor 2
push argument 0
pop pointer 0
push pointer 0
push this 1
call Grid.xFromIdx 2
pop local 0
push pointer 0
push this 1
call Grid.yFromIdx 2
pop local 1
push this 1
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 1
add
push local 1
push constant 1
add
push local 0
push static 2
add
push constant 1
sub
push local 1
push static 2
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push this 1
push this 0
add
pop pointer 1
push that 0
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 1
call Grid.drawO 2
pop temp 0
label IF_FALSE1
push this 1
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 1
add
push local 1
push constant 1
add
push local 0
push static 2
add
push constant 1
sub
push local 1
push static 2
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
push this 1
call Grid.drawX 2
pop temp 0
label IF_FALSE2
push constant 0
return
function Grid.moveLeft 0
push argument 0
pop pointer 0
push pointer 0
push this 1
push constant 3
call Grid.rest 3
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Grid.eraseCursor 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push pointer 0
call Grid.drawCursor 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Grid.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 3
call Math.divide 2
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Grid.eraseCursor 1
pop temp 0
push this 1
push constant 3
sub
pop this 1
push pointer 0
call Grid.drawCursor 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Grid.moveRight 0
push argument 0
pop pointer 0
push pointer 0
push this 1
push constant 3
call Grid.rest 3
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Grid.eraseCursor 1
pop temp 0
push this 1
push constant 1
add
pop this 1
push pointer 0
call Grid.drawCursor 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Grid.moveDown 0
push argument 0
pop pointer 0
push this 1
push constant 3
call Math.divide 2
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Grid.eraseCursor 1
pop temp 0
push this 1
push constant 3
add
pop this 1
push pointer 0
call Grid.drawCursor 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Grid.insertXO 0
push argument 0
pop pointer 0
push this 1
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
return
label IF_FALSE0
push argument 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push this 1
call Grid.drawX 2
pop temp 0
goto IF_END1
label IF_FALSE1
push this 1
push this 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push this 1
call Grid.drawO 2
pop temp 0
label IF_END1
push argument 1
not
return
function Grid.checkWinner 0
push argument 0
pop pointer 0
push constant 0
pop this 2
label WHILE_EXP0
push this 2
push constant 9
lt
not
if-goto WHILE_END0
push this 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
push this 2
push this 0
add
pop pointer 1
push that 0
push this 2
push constant 1
add
push this 0
add
pop pointer 1
push that 0
eq
and
push this 2
push constant 1
add
push this 0
add
pop pointer 1
push that 0
push this 2
push constant 2
add
push this 0
add
pop pointer 1
push that 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push this 0
add
pop pointer 1
push that 0
return
label IF_FALSE0
push this 2
push constant 3
add
pop this 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 2
label WHILE_EXP1
push this 2
push constant 3
lt
not
if-goto WHILE_END1
push this 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
push this 2
push this 0
add
pop pointer 1
push that 0
push this 2
push constant 3
add
push this 0
add
pop pointer 1
push that 0
eq
and
push this 2
push constant 3
add
push this 0
add
pop pointer 1
push that 0
push this 2
push constant 6
add
push this 0
add
pop pointer 1
push that 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push this 0
add
pop pointer 1
push that 0
return
label IF_FALSE1
push this 2
push constant 1
add
pop this 2
goto WHILE_EXP1
label WHILE_END1
push this 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 4
push this 0
add
pop pointer 1
push that 0
eq
and
push constant 4
push this 0
add
pop pointer 1
push that 0
push constant 8
push this 0
add
pop pointer 1
push that 0
eq
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push this 0
add
pop pointer 1
push that 0
return
label IF_FALSE2
push this 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
push constant 2
push this 0
add
pop pointer 1
push that 0
push constant 4
push this 0
add
pop pointer 1
push that 0
eq
and
push constant 4
push this 0
add
pop pointer 1
push that 0
push constant 6
push this 0
add
pop pointer 1
push that 0
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
push this 0
add
pop pointer 1
push that 0
return
label IF_FALSE3
push constant 0
pop this 2
label WHILE_EXP2
push this 2
push constant 9
lt
not
if-goto WHILE_END2
push this 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
return
label IF_FALSE4
push this 2
push constant 1
add
pop this 2
goto WHILE_EXP2
label WHILE_END2
push constant 2
return
