// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    HalfAdder(a=a, b=b, sum=sum1, carry=carry1);
    HalfAdder(a=sum1, b=c, sum=sum, carry=carry2);
    Or(a=carry1, b=carry2, out=carry);
    /*
    // sum: ~a.(b xor c) + a.(~b.~c + b.c)
    // carry: a.(b xor c) + b.c
    Not(in=a, out=notA);
    Not(in=b, out=notB);
    Not(in=c, out=notC);
    Xor(a=b, b=c, out=bXorC);
    And(a=notB, b=notC, out=bNorC);
    And(a=b, b=c, out=bAndC);
    Or(a=bNorC, b=bAndC, out=notBCOrBC);
    And(a=a, b=notBCOrBC, out=aNotBCOrBC);
    And(a=notA, b=bXorC, out=notABXorC);
    Or(a=notABXorC, b=aNotBCOrBC, out=sum);
    And(a=a, b=bXorC, out=aBXorC);
    Or(a=aBXorC, b=bAndC, out=carry);
    */
}
